// ∞//// boords_Animatic.jsx// Copyright (c) 2017 Animade with Code. All rights reserved.// www.Boords.com// // Name: BoordsTools// Version: 1.0// (function BoordsTools(thisObj){	var BoordsToolsData = new Object();	// Store globals in an object		if (app.settings.haveSetting("boords", "BoordsTools_scriptPath_1"))	BoordsToolsData.toolDirectory = app.settings.getSetting("boords", "BoordsTools_scriptPath_1");		// Get the root folders	BoordsToolsData.rootFolderURI = Folder.current.absoluteURI  + "/BoordsTools/";	BoordsToolsData.iconFolderURI = Folder.current.absoluteURI  + "/BoordsTools/_icons/";	// Get the tools folders	var tempFolder = new Folder(BoordsToolsData.rootFolderURI);	BoordsToolsData.toolsFoldersUnsorted = tempFolder.getFiles();	BoordsToolsData.toolsFolders = [];	BoordsToolsData.tools = [];	for (var i = 0; i < BoordsToolsData.toolsFoldersUnsorted.length; i++) {		var toolName = BoordsToolsData.toolsFoldersUnsorted[i].name;		var remove = toolName.indexOf('*');		if(remove > -1){ continue; }		var results = toolName.indexOf('boords');		if(results > -1){			// If the name includes 'animade' it's a tool folder. Add it to the toolsFolder Array and add the name (minus indexing) to the tools array			BoordsToolsData.toolsFolders.push(BoordsToolsData.toolsFoldersUnsorted[i]);			var res = toolName.split("-");			BoordsToolsData.tools.push(res[1]);		}	}; // Make the UI portion and get the tools BoordsToolsData.UI_Segment = ""; for (var i = 0; i < BoordsToolsData.toolsFolders.length; i++) { 	var folderName = BoordsToolsData.toolsFolders[i].name; 	var toolName = BoordsToolsData.tools[i]; 	BoordsToolsData.UI_Segment += toolName+": IconButton { helpTip:'Boords Animatic Tool', image:'"+BoordsToolsData.rootFolderURI+folderName+"/"+toolName+".png', alignment:['fill','bottom']}, \ "; };	BoordsToolsData.scriptName = "Boords Animatic Tool";	BoordsToolsData.scriptTitle = BoordsToolsData.scriptName + " v1.1";	BoordsToolsData.scriptPath = "";	BoordsToolsData.scriptFiles = new Array();	BoordsToolsData.moreTitle = {en: "Useful Scripts"};	// HELP LINK	BoordsToolsData.links = ["https://intercom.help/boords/plugins-and-extensions/boords-animatic-tool-for-after-effects"];		BoordsToolsData.winBrowserCmd = "C:/Program Files/Internet Explorer/iexplore.exe";		// Use forward slashes	BoordsToolsData.macBrowserCmdStart = "osascript -e 'open location \"";	BoordsToolsData.macBrowserCmdEnd = "\"'";	BoordsToolsData.strScriptsFolder = {en: "Tools folder"};	BoordsToolsData.strTemplateType = {en: "Simple Project Template"};	BoordsToolsData.strRefreshList = {en: "Reload Scripts"};	BoordsToolsData.strRun = {en: "Run"};	BoordsToolsData.strHelp = {en: "?"};	BoordsToolsData.strErrNoScriptsPath = {en: "Please locate the Animade Tools folder."};	BoordsToolsData.strErrMissingFile = {en: "Cannot locate the selected script."};	BoordsToolsData.strMinAE100 = {en: "This script requires Adobe After Effects CS5 or later."};	BoordsToolsData.strHelpText = 	{		en: "Copyright (c) 2005-2013 animade (Jeffrey R. Almasol). \n" +		"All rights reserved.\n" +		"\n" +		"This script displays a palette of the installed scripts in the selected Scripts folder (and subfolders). Only scripts with .js, .jsx, and .jsxbin extensions are displayed. Double-click a script to launch it. Double-click a script to launch it. Scripts located in subfolders whose names are enclosed in parentheses are ignored. You can change the Scripts folder at any time, and refresh the scripts list if the contents of the folder have changed. The selected scripts folder is stored as a setting, so you don't have to reselect it every time you reopen this palette.\n" +		"\n" +		"Note: The palette cannot detect any errors in the scripts that you run from it. It's just a quick way of launching scripts without restarting AE or using ExtendScript Toolkit (i.e., switching away from AE).\n" +		"\n" + 		"If a PNG file of a similar name and same folder as the script file (but with a .png file name extension) exists, it will appear next to the script name in the list.\n" + 		"\n" +		"Note: This version of the script requires After Effects CS5 or later. It can be used as a dockable panel by placing the script in a ScriptUI Panels subfolder of the Scripts folder, and then choosing this script from the Window menu.\n" +		"\n" +		"Enhancements requested by Russ Maehl, Julian Herrera, and Navarro Parker."	};	BoordsToolsData.sep = "sep: Group { orientation:'row', alignment:['left','fill'], rule: Panel { width: 15, alignment:['left','fill'], }, },"		function BoordsTools_localize(strVar)	{		return strVar["en"];	}			// BoordsTools_buildUI()	// 	// Description:	// This function builds the user interface.	// 	// Parameters:	// thisObj - Panel object (if script is launched from Window menu); null otherwise.	// 	// Returns:	// Window or Panel object representing the built user interface.	//	function BoordsTools_buildUI(thisObj)	{		var positionPal = (app.settings.haveSetting("animade", "BoordsTools_frameBounds") && !(thisObj instanceof Panel));		if (positionPal)		{			var bounds = new Array();			bounds = app.settings.getSetting("animade", "BoordsTools_frameBounds").split(",");			for (i in bounds)				bounds[i] = parseInt(bounds[i], 10);		}		else		{			var bounds = undefined;		}		var pal = (thisObj instanceof Panel) ? thisObj : new Window("palette", BoordsToolsData.scriptName, bounds, {resizeable:true});		/*Logo script 	logo: Group { \		alignment:['center','top'], \		boordsLogo: Image { text:'image', image:'"+BoordsToolsData.iconFolderURI+"boords_logo.png'}, \	}, \*/		if (pal !== null)		{			var res =			"group { \				orientation:'column', alignment:['fill','top'], \				boords_tools: Group { orientation:'row', \					alignment:['fill','top'], \					"+ BoordsToolsData.UI_Segment +"}, \					boords_tools_help: Group { orientation:'row', \					alignment:['fill','top'], \					anmd_toolsHelp_Btn: IconButton { helpTip:'Help and feedback', image:'"+BoordsToolsData.iconFolderURI+"boords_help.png', alignment:['right','bottom'], style:'toolbutton'}, \				} \			}";			pal.grp = pal.add(res);			pal.layout.layout(true);				//			// Set up buttons 			//			var toolButtons = [];			for (var j = 0; j < BoordsToolsData.tools.length; j++) {					toolButtons[j] = ( pal.grp.boords_tools[BoordsToolsData.tools[j]] );				toolButtons[j].scriptFileName = BoordsToolsData.toolsFolders[j].name+'/'+BoordsToolsData.tools[j]+'.jsx';				toolButtons[j].onClick = toolClicked;			};				var anmd_toolsHelp_Btn = pal.grp.boords_tools_help.anmd_toolsHelp_Btn; anmd_toolsHelp_Btn.link = 0; anmd_toolsHelp_Btn.onClick = BoordsTools_urlLink;								}				return pal;	}		// toolClicked()	// 	// Description:	// This function runs a script button on click	// 	function toolClicked(){		writeLn(this.scriptFileName);		var scriptFile = Folder(BoordsToolsData.rootFolderURI+this.scriptFileName);    	scriptFile.open();    	eval(scriptFile.read());    	scriptFile.close();	}	// BoordsTools_urlLink()	// 	// Description:	// This function runs a callSytem to open a specified URL	// 	function BoordsTools_urlLink(){		writeLn("help");		if (app.preferences.getPrefAsLong("Main Pref Section", "Pref_SCRIPTING_FILE_NETWORK_SECURITY") != 1)		{		    alert("Please tick the \"Allow Scripts to Write Files and Access Network\" checkbox if Preferences > General");		    // Then open Preferences > General to let people tick the checkbox		    app.executeCommand(2359);		}		var helpLink = BoordsToolsData.links[this.link];		if ($.os.indexOf("Windows") !== -1){			system.callSystem(BoordsToolsData.winBrowserCmd + " " + helpLink);		}		else{			system.callSystem("open " + helpLink );		}		}		if (parseFloat(app.version) < 10.0)		alert(BoordsTools_localize(BoordsToolsData.strMinAE100), BoordsToolsData.scriptName);	else	{		// Build and show the palette		var rdslPal= BoordsTools_buildUI(thisObj);		if (rdslPal !== null)		{			if (app.settings.haveSetting("animade", "BoordsTools_templateType"))				rdslPal.grp.footer.templateType.value = (app.settings.getSetting("animade", "BoordsTools_templateType") === "false") ? false : true;			rdslPal.onClose = function()			{				app.settings.saveSetting("animade", "BoordsTools_templateType", rdslPal.grp.footer.templateType.value);				if (!(rdslPal instanceof Panel))					app.settings.saveSetting("animade", "BoordsTools_frameBounds", rdslPal.frameBounds.toString());			}						if (rdslPal instanceof Window)			{				rdslPal.show();			}			else				rdslPal.layout.layout(true);		}	}})(this);